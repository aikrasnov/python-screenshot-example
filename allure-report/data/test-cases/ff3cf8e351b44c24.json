{
  "uid" : "ff3cf8e351b44c24",
  "name" : "test_search_field",
  "fullName" : "screenshot_tests.tests.yandex_main_page_test.TestYandexMainPage#test_search_field",
  "historyId" : "1c6180a6a50469c5cd152002213dbd36",
  "time" : {
    "start" : 1569176221591,
    "stop" : 1569176247587,
    "duration" : 25996
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: «Поисковый блок» отличается на страницах:\nhttps://yandex.ru/\nи\nhttps://yandex.ru/",
  "statusTrace" : "self = <yandex_main_page_test.TestYandexMainPage object at 0x10cb5ccc0>\n\n    def test_search_field(self):\n        words = [\"foo\", \"bar\", \"lol\", \"kek\", \"cheburek\", \"otus\", \"yandex\", \"google\"]\n        page = self.get_page(YandexMainPage)\n    \n        def action():\n            page.search_input.send_keys(random.choice(words))\n    \n>       self.check_by_screenshot(page.search_field, action)\n\nscreenshot_tests/tests/yandex_main_page_test.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yandex_main_page_test.TestYandexMainPage object at 0x10cb5ccc0>\nelement = <screenshot_tests.page_objects.custom_web_element.CustomWebElement object at 0x10cb875c0>\nargs = (<function TestYandexMainPage.test_search_field.<locals>.action at 0x10cb717b8>,)\nkwargs = {}, diff = 16\nsaved_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\nprod_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\ninfo = '«Поисковый блок»'\n\n    def check_by_screenshot(self, element: CustomWebElement, *args, **kwargs):\n        diff, saved_url, prod_url = self._get_diff(element, *args, **kwargs)\n        info = element.description\n>       assert diff == 0, f\"{info} отличается на страницах:\\n{saved_url.geturl()}\\nи\\n{prod_url.geturl()}\"\nE       AssertionError: «Поисковый блок» отличается на страницах:\nE       https://yandex.ru/\nE       и\nE       https://yandex.ru/\n\nscreenshot_tests/utils/screenshots.py:143: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "set_driver",
    "time" : {
      "start" : 1569176221588,
      "stop" : 1569176221588,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1569176221097,
      "stop" : 1569176221097,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "configure",
    "time" : {
      "start" : 1569176221097,
      "stop" : 1569176221098,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1569176221098,
      "stop" : 1569176221588,
      "duration" : 490
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "screenshot_prepare",
    "time" : {
      "start" : 1569176221098,
      "stop" : 1569176221098,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1569176221097,
      "stop" : 1569176221097,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: «Поисковый блок» отличается на страницах:\nhttps://yandex.ru/\nи\nhttps://yandex.ru/",
    "statusTrace" : "self = <yandex_main_page_test.TestYandexMainPage object at 0x10cb5ccc0>\n\n    def test_search_field(self):\n        words = [\"foo\", \"bar\", \"lol\", \"kek\", \"cheburek\", \"otus\", \"yandex\", \"google\"]\n        page = self.get_page(YandexMainPage)\n    \n        def action():\n            page.search_input.send_keys(random.choice(words))\n    \n>       self.check_by_screenshot(page.search_field, action)\n\nscreenshot_tests/tests/yandex_main_page_test.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yandex_main_page_test.TestYandexMainPage object at 0x10cb5ccc0>\nelement = <screenshot_tests.page_objects.custom_web_element.CustomWebElement object at 0x10cb875c0>\nargs = (<function TestYandexMainPage.test_search_field.<locals>.action at 0x10cb717b8>,)\nkwargs = {}, diff = 16\nsaved_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\nprod_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\ninfo = '«Поисковый блок»'\n\n    def check_by_screenshot(self, element: CustomWebElement, *args, **kwargs):\n        diff, saved_url, prod_url = self._get_diff(element, *args, **kwargs)\n        info = element.description\n>       assert diff == 0, f\"{info} отличается на страницах:\\n{saved_url.geturl()}\\nи\\n{prod_url.geturl()}\"\nE       AssertionError: «Поисковый блок» отличается на страницах:\nE       https://yandex.ru/\nE       и\nE       https://yandex.ru/\n\nscreenshot_tests/utils/screenshots.py:143: AssertionError",
    "steps" : [ {
      "name" : "Send text ['lol'] to «Поисковый инпут»",
      "time" : {
        "start" : 1569176223631,
        "stop" : 1569176223862,
        "duration" : 231
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "locator_type",
        "value" : "'css selector'"
      }, {
        "name" : "locator",
        "value" : "'.input__control'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Send text ['cheburek'] to «Поисковый инпут»",
      "time" : {
        "start" : 1569176235178,
        "stop" : 1569176235397,
        "duration" : 219
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "locator_type",
        "value" : "'css selector'"
      }, {
        "name" : "locator",
        "value" : "'.input__control'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d807dd446712ec34",
      "name" : "diff",
      "source" : "d807dd446712ec34.png",
      "type" : "image/png",
      "size" : 5806
    }, {
      "uid" : "43262d127c532fc2",
      "name" : "actual",
      "source" : "43262d127c532fc2.png",
      "type" : "image/png",
      "size" : 5602
    }, {
      "uid" : "e4728e62a9273013",
      "name" : "expected",
      "source" : "e4728e62a9273013.png",
      "type" : "image/png",
      "size" : 5814
    }, {
      "uid" : "6f4fd4816dedd724",
      "name" : "log",
      "source" : "6f4fd4816dedd724.txt",
      "type" : "text/plain",
      "size" : 2838
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1569176247715,
      "stop" : 1569176247818,
      "duration" : 103
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f764d0c1f0c002e8",
      "name" : "last url",
      "source" : "f764d0c1f0c002e8.uri",
      "type" : "text/uri-list",
      "size" : 18
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "testType",
    "value" : "screenshotDiff"
  }, {
    "name" : "parentSuite",
    "value" : "screenshot_tests.tests"
  }, {
    "name" : "suite",
    "value" : "yandex_main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestYandexMainPage"
  }, {
    "name" : "host",
    "value" : "macbook-pro"
  }, {
    "name" : "thread",
    "value" : "53353-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "screenshot_tests.tests.yandex_main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ff3cf8e351b44c24.json",
  "parameterValues" : [ ]
}
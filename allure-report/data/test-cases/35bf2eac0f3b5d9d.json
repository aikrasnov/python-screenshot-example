{
  "uid" : "35bf2eac0f3b5d9d",
  "name" : "test_news_widget",
  "fullName" : "screenshot_tests.tests.yandex_main_page_test.TestYandexMainPage#test_news_widget",
  "historyId" : "3ef35865270ff1d210fb39b9ab2432e0",
  "time" : {
    "start" : 1569176222538,
    "stop" : 1569176250120,
    "duration" : 27582
  },
  "description" : "Test for news widget.",
  "descriptionHtml" : "<p>Test for news widget.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: «Хэдер с новостями» отличается на страницах:\nhttps://yandex.ru/\nи\nhttps://yandex.ru/",
  "statusTrace" : "self = <yandex_main_page_test.TestYandexMainPage object at 0x103a6d2b0>\n\n    def test_news_widget(self):\n        \"\"\"Test for news widget.\"\"\"\n        page = self.get_page(YandexMainPage)\n>       self.check_by_screenshot(page.news_header)\n\nscreenshot_tests/tests/yandex_main_page_test.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yandex_main_page_test.TestYandexMainPage object at 0x103a6d2b0>\nelement = <screenshot_tests.page_objects.custom_web_element.CustomWebElement object at 0x103ab4710>\nargs = (), kwargs = {}, diff = 435\nsaved_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\nprod_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\ninfo = '«Хэдер с новостями»'\n\n    def check_by_screenshot(self, element: CustomWebElement, *args, **kwargs):\n        diff, saved_url, prod_url = self._get_diff(element, *args, **kwargs)\n        info = element.description\n>       assert diff == 0, f\"{info} отличается на страницах:\\n{saved_url.geturl()}\\nи\\n{prod_url.geturl()}\"\nE       AssertionError: «Хэдер с новостями» отличается на страницах:\nE       https://yandex.ru/\nE       и\nE       https://yandex.ru/\n\nscreenshot_tests/utils/screenshots.py:143: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1569176221097,
      "stop" : 1569176221097,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "screenshot_prepare",
    "time" : {
      "start" : 1569176221097,
      "stop" : 1569176221097,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1569176221097,
      "stop" : 1569176222535,
      "duration" : 1438
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "set_driver",
    "time" : {
      "start" : 1569176222536,
      "stop" : 1569176222536,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1569176221096,
      "stop" : 1569176221096,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "configure",
    "time" : {
      "start" : 1569176221097,
      "stop" : 1569176221097,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Test for news widget.",
    "status" : "failed",
    "statusMessage" : "AssertionError: «Хэдер с новостями» отличается на страницах:\nhttps://yandex.ru/\nи\nhttps://yandex.ru/",
    "statusTrace" : "self = <yandex_main_page_test.TestYandexMainPage object at 0x103a6d2b0>\n\n    def test_news_widget(self):\n        \"\"\"Test for news widget.\"\"\"\n        page = self.get_page(YandexMainPage)\n>       self.check_by_screenshot(page.news_header)\n\nscreenshot_tests/tests/yandex_main_page_test.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yandex_main_page_test.TestYandexMainPage object at 0x103a6d2b0>\nelement = <screenshot_tests.page_objects.custom_web_element.CustomWebElement object at 0x103ab4710>\nargs = (), kwargs = {}, diff = 435\nsaved_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\nprod_url = ParseResult(scheme='https', netloc='yandex.ru', path='/', params='', query='', fragment='')\ninfo = '«Хэдер с новостями»'\n\n    def check_by_screenshot(self, element: CustomWebElement, *args, **kwargs):\n        diff, saved_url, prod_url = self._get_diff(element, *args, **kwargs)\n        info = element.description\n>       assert diff == 0, f\"{info} отличается на страницах:\\n{saved_url.geturl()}\\nи\\n{prod_url.geturl()}\"\nE       AssertionError: «Хэдер с новостями» отличается на страницах:\nE       https://yandex.ru/\nE       и\nE       https://yandex.ru/\n\nscreenshot_tests/utils/screenshots.py:143: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "15b144bb82e16a13",
      "name" : "diff",
      "source" : "15b144bb82e16a13.png",
      "type" : "image/png",
      "size" : 63598
    }, {
      "uid" : "8f9801e50746a9d2",
      "name" : "actual",
      "source" : "8f9801e50746a9d2.png",
      "type" : "image/png",
      "size" : 63036
    }, {
      "uid" : "ae0890108418dd6e",
      "name" : "expected",
      "source" : "ae0890108418dd6e.png",
      "type" : "image/png",
      "size" : 63550
    }, {
      "uid" : "d77bd5a097581fae",
      "name" : "log",
      "source" : "d77bd5a097581fae.txt",
      "type" : "text/plain",
      "size" : 3118
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1569176250196,
      "stop" : 1569176250287,
      "duration" : 91
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7c5f405b92682e2f",
      "name" : "last url",
      "source" : "7c5f405b92682e2f.uri",
      "type" : "text/uri-list",
      "size" : 18
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "testType",
    "value" : "screenshotDiff"
  }, {
    "name" : "parentSuite",
    "value" : "screenshot_tests.tests"
  }, {
    "name" : "suite",
    "value" : "yandex_main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestYandexMainPage"
  }, {
    "name" : "host",
    "value" : "macbook-pro"
  }, {
    "name" : "thread",
    "value" : "53352-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "screenshot_tests.tests.yandex_main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "35bf2eac0f3b5d9d.json",
  "parameterValues" : [ ]
}